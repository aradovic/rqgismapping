<!--begin.rcode init,echo=FALSE,result="hide"
# build("./rqgismapping/index.Rhtml", "./templatr/inst/templates/pres1/","index.html",title="Mapping in R and QGIS")
knitr::opts_chunk$set(comment=NA, prompt=TRUE, dev="CairoPNG", cache=TRUE)
knitr::opts_knit$set(root.dir=wd)
op = options()$continue
options(continue=" ")
grDevices::X11.options(type='cairo')
library(readr)
library(lubridate)
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggvis)
library(rvest)
library(testthat)
library(devtools)
library(testthat)
library(magrittr)
set.seed(310366)
end.rcode-->

<style>
span.language { font-weight: bold}
</style>

<div class="slide" id="title">
<h1>Mapping in R and QGIS</h1>
<h2>Barry Rowlingson</h2>
<h2><code>@geospacedman</code></h2>
<h3>Lancaster University</h3>
<p style="font-size: 40%">[next slide=right arrow, prev slide=left arrow, or click slide counter top-right for index]</p>
</div>

<!-- READ http://www.jstatsoft.org/v63 -->

<div class="slide">
<h1>What is a map?</h1>
<h2>Is it this?</h2>
<img class="mainpic half" src="images/oldworldmap.jpg" />
<h2>Or this?</h2>
<img class="mainpic half" src="images/oldskymap.jpg" />
<h2>Or this?</h2>
<img class="mainpic half" src="images/am-map.jpg" />
<span class="copyright">&copy; Martin Wallace Games</span>
<img class="mainpic half" src="images/cartogram-map.png" />
<span class="copyright"><a href="https://commons.wikimedia.org/wiki/File:Cartlinearlarge.png#/media/File:Cartlinearlarge.png">"Cartlinearlarge" by M. E. J. Newman. Licensed under CC BY 2.0 via Commons</a>
</span>
</div>

<div class="slide">
<h1>Let's Ask A Philosopher</h1>
</div>

<div class="slide">
<h1>Let's Ask A Mathematician</h1>
<blockquote>
[wikipedia]</br>
In mathematics, the term mapping, usually shortened to map, refers to either
<ul>
<li>A function, often with some sort of special structure</li>
<li>A morphism in category theory, which generalizes the idea of a function.</li>
</ul>
</blockquote>
<h2>These are maps:</h2>
<img class="mainpic" src="images/color_map.png" />
<img class="mainpic" src="images/mapping1.png" />
<h2>This isn't a map:</h2>
<img class="mainpic" src="images/not-a-mapping.png" />
</div>

<div class="slide">
<h1>How Does That Relate To Geography?</h1>
<h2>All Geographic Maps In One Diagram Ever</h2>
<img class="mainpic" src="images/conceptmap.png" />
</div>

<div class="slide">
<h1>Early Days</h1>
<h2><code>splancs</code></h2>
<p>A very early package for point pattern analysis...</p>
<!--begin.rcode splancsmaps
library(splancs)
calpoly = read.csv("./data/calipoly.csv")[,2:3]
head(calpoly)
cali = read.csv("./data/calibration.csv")
head(cali[,1:6])
calipts = cali[,2:3]
polymap(calpoly)
pointmap(calipts, add=TRUE)
end.rcode-->
<p>Note it <em>preserves the aspect ratio</em> which is the wrong thing to do 
for lat-long coordinates.</p>

<h2><code>maps</code></h2>
<p>The <code>maps</code> package came from similar S-plus packages.</p>
<ul>
<li>Bundled with a world map database</li>
<li>Custom binary data format</li>
<li>Can build new binary data from coordinate files and build tools</li>
</ul>
<!--begin.rcode
map("world","Croatia")
map("world","Yugoslavia")
points(calipts)
end.rcode-->
<ul>
<li>But nobody seems to have done that recently...</li>
</ul>
</div>

<div class="slide">
<h1>Base graphics</h1>
<h2>Base basics</h2>
<ul>
<li>A plot area of a given physical size (inches x inches)</li>
<li>Physical coordinates mapped to device coordinates</li>
<li>Device coordinates mapped to plot coordinates for graphs</li>
<li>Drawing model is pens on paper</li>
<li>Can always add ink over ink</li>
</ul>
<h2><code>plot</code>, <code>points</code>, <code>lines</code></h2>
<!--begin.rcode basicsbase
plot(calipts, asp=1)
polygon(calpoly,border=2,lwd=3)
abline(h=44, lty=2)
end.rcode-->
<h2><code>image</code></h2>
<p>The first signs of raster data in R</p>
<!--begin.rcode ksmooooth
ksmooth = kernel2d(as.matrix(calipts), as.matrix(calpoly), .4, nx=100, ny=100)
polymap(calpoly)
image(ksmooth, add=TRUE)

points(calipts, pch=1)
end.rcode-->
</div>

<div class="slide">
<h1>Base graphics extended</h1>
<!-- TODO search for image and image.plot on rdocumentation -->
<h2><code>image</code> goes walkabout</h2>
<img class="mainpic" src="images/image-search.png" />
<h2><code>image.plot</code></h2>
<img class="mainpic" src="images/image.plot-search.png" />
<h3>Let's try one from <code>fields</code></h3>
<!--begin.rcode fieldsplot
fields::image.plot(ksmooth)
points(calipts, pch=1)
polygon(calpoly)
end.rcode-->
<h2>How about <code>filled.contour</code>?</h2>
<!--begin.rcode filledcontour
filled.contour(ksmooth)
polygon(calpoly)
end.rcode-->

<h2>How about <code>levelplot</code>?</h2>
<!--begin.rcode levelplottry
lattice::levelplot(ksmooth$z)
polygon(calpoly)
end.rcode-->

<h2>You just discovered <code>grid</code> graphics...</h2>

</div>

<div class="slide">
<h1>Grid Graphics</h1>
<h2>A Whole New Graphics System</h2>
<ul>
<li>Everything You Know Is Wrong</li>
<li>Don't Cross The (Graphics) Streams</li>
<li>An <em>Object-Oriented Drawing</em> system, not a <em>charting</em> system</li>
</ul>
<h2>Concepts</h2>
<ul>
<li>Viewports</li>
<li>Grobs</li>
<li>Layouts</li>
<li>Transformations</li>
</ul>
<!--begin.rcode gridexample
library(grid)
grid.rect(gp = gpar(lty = "dashed"))
vp1 <- viewport(x = 0, y = 0.5, w = 0.5, h = 0.5,
                just = c("left", "bottom"), name = "vp1")
vp2 <- viewport(x = 0.5, y = 0, w = 0.5, h = 0.5,
                just = c("left", "bottom"))
pushViewport(vp1)
grid.rect(gp = gpar(col = "grey"))
grid.text("Some drawing in graphics region 1", y = 0.8)
upViewport()
pushViewport(vp2)
grid.rect(gp = gpar(col = "grey"))
grid.text("Some drawing in graphics region 2", y = 0.8)
upViewport()
downViewport("vp1")
grid.text("MORE drawing in graphics region 1", y = 0.2)
popViewport()
end.rcode-->
</div>

<div class="slide">
<h1>The <code>lattice</code> package</h1>
<!-- show incompatibility with base -->
<!--begin.rcode latticeexamples
library(lattice)
xyplot(altitude_m ~ precip_mm|precip_type, data=cali)
histogram(~precip_mm|precip_type, data=cali)
end.rcode-->
</div>

<div class="slide">
<h1><code>sp</code> objects</h1>
<!--begin.rcode makesps
coordinates(cali)=~lonWGS84+latWGS84
proj4string(cali)=CRS("+init=epsg:4326")
plot(cali)
axis(1);axis(2)
abline(h=44, lty=2);abline(v=16, lty=2)
end.rcode-->
<h2><code>spplot</code></h2>
<!--begin.rcode spplotexample
spplot(subset(cali,precip_mm>10),"precip_mm")
axis(1);axis(2)
abline(v=16)
abline(h=44)
end.rcode-->

<img class="mainpic" src="images/spfail.png" />

</div>

<div class="slide">
<h1><code>raster</code> package</h1>
<h2>Plotting</h2>
<!--begin.rcode makeraster
rsmooth = raster(ksmooth)
plot(rsmooth)
polygon(calpoly,border=2,lwd=3)
abline(v=16, lty=3)
abline(h=44, lty=2)
end.rcode-->
<h2>Bonus</h2>
<!--begin.rcode rasterbonus
croatia = getData("GADM", country="Croatia",level=1)
croatia_dem= getData("alt", country="Croatia")
croatia$mean_alt = extract(croatia_dem, croatia, fun=mean, na.rm=TRUE)
plot(croatia)
end.rcode-->
</div>

<div class="slide">
<h1>The <code>ggplot2</code> package</h1>
</div>

<div class="slide">
<h1>OSM backgrounds</h1>
</div>

<div class="slide">
<h1><code>ggmap</code></h1>
</div>

<div class="slide">
<h1>More <em>neo-geography</em></h1>
<!-- geoJSON? web APIs? -->
</div>

<div class="slide">
<h1>KML and Google Earth</h1>
</div>

<div class="slide">
<h1>OpenStreetMap data</h1>
</div>

<div class="slide">
<h1>To the web!</h1>
<h2>OpenLayers and Leaflet</h2>
</div>


<div class="slide">
<h1>QGIS outline</h1>
</div>

<div class="slide">
<h1>QGIS data</h1>
<h2>Vector</h2>
<h2>Raster</h2>
<h2>Database</h2>
<h2>Web Services</h2>
</div>

<div class="slide">
<h1>Styling</h1>
<h2>Vector</h2>
<h2>Raster</h2>
</div>

<div class="slide">
<h1>Labelling</h1>
</div>

<div class="slide">
<h1>Space-time data</h1>
</div>

<div class="slide">
<h1>Layer Composition</h1>
</div>

<div class="slide">
<h1>Map Composer</h1>
</div>

<div class="slide">
<h1>Automation</h1>
</div>

<div class="slide">
<h1>Outputs</h1>
<h2>Image</h2>
<h2>PDF</h2>
<h2>Web</h2>
</div>




<!--begin.rcode endit,echo=FALSE,result="hide", cache=FALSE
#save(list=c("bps","bpd","bpd2","bps2"),file="/tmp/run.RData")
options(continue=op)
end.rcode-->
